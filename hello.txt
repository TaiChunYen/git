git clone   
clone下來別人的專案到local端
 
git init  
創建一個新的Repository (打開任何一個專案資料夾打上git init)
 
add add 主檔名.副檔名   
將檔案提交入Staging Areagit add 整個資料夾提交入Staging Area 
 
git commit -m '一行解說文字'  
將檔案提交入Repository git commit -e 能用編輯器撰寫多行解說文字
 
git rm --cached 檔案名稱 
將不在Repository的檔案移出Staging Area
 
git reset HEAD 
將已經在Repository的檔案移出Staging Area
 
git status
查看目前檔案的狀態
 
git log
查看目前所有commit的歷史紀錄

git log 
列出所有commit的歷史紀錄
 
git diff 
比較文件或commit間修改的差異
 
git show 
詳細列出該次commit的修改內容
 
git status 
列出目前的檔案狀態

git pull
將舊版本拉下來和新版本融合

git push -u origin master
將融合後的版本上傳

git remote rm origin
把舊的/別人的origin刪掉,之後就能換上新的/自己的origin

git remote -v
列出目前專案的使用倉庫(repository)

git remote set-url origin 改名後的網址
指定現在想使用的倉庫位置

git rev-list --objects --all | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | sed -n 's/^blob //p' | sort --numeric-sort --key=2 | cut -c 1-12,41- | $(command -v gnumfmt || echo numfmt) --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest
將Git倉庫中的檔案依照大小排序並顯示出來

git filter-branch --force --tree-filter 'rm -f -r "檔案路徑"' -- --all
將已經被commit進Git倉庫的檔案刪除
